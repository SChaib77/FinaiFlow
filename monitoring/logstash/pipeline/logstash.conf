input {
  beats {
    port => 5044
  }
  
  # File input for application logs
  file {
    path => "/var/log/finaiflow/*.log"
    start_position => "beginning"
    codec => "json"
    tags => ["finaiflow", "application"]
  }
  
  # Syslog input
  syslog {
    port => 514
    tags => ["syslog"]
  }
}

filter {
  # Parse timestamp
  date {
    match => [ "timestamp", "ISO8601" ]
  }
  
  # Parse JSON logs
  if [message] =~ /^\{/ {
    json {
      source => "message"
    }
  }
  
  # Add environment metadata
  mutate {
    add_field => { "environment" => "${ENVIRONMENT:development}" }
    add_field => { "service" => "finaiflow" }
  }
  
  # Parse structured logs
  if [logger] {
    mutate {
      add_field => { "log_level" => "%{level}" }
      add_field => { "log_source" => "%{logger}" }
    }
  }
  
  # Extract request information
  if [request_id] {
    mutate {
      add_field => { "trace_id" => "%{request_id}" }
    }
  }
  
  # Parse user information
  if [user_id] {
    mutate {
      add_field => { "user" => "%{user_id}" }
    }
  }
  
  # Parse error information
  if [error] {
    mutate {
      add_field => { "error_type" => "%{[error][type]}" }
      add_field => { "error_message" => "%{[error][message]}" }
    }
  }
  
  # GeoIP lookup for IP addresses
  if [client_ip] {
    geoip {
      source => "client_ip"
      target => "geoip"
    }
  }
  
  # Drop unnecessary fields
  mutate {
    remove_field => [ "host", "agent", "input", "ecs" ]
  }
}

output {
  # Send to Elasticsearch
  elasticsearch {
    hosts => ["elasticsearch:9200"]
    index => "finaiflow-logs-%{+YYYY.MM.dd}"
    template_name => "finaiflow"
    template_pattern => "finaiflow-*"
    template => "/usr/share/logstash/templates/finaiflow-template.json"
  }
  
  # Debug output (optional)
  if [log_level] == "ERROR" or [log_level] == "CRITICAL" {
    stdout {
      codec => rubydebug
    }
  }
}